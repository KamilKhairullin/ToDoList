name: SwiftLint & Build & Test

on:
  push:
    branches:
      - '**'
      - '!main'
  pull_request:
    branches:
      - 'main'
      
jobs:
  SwiftLint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: GitHub Action for SwiftLint with --strict
        uses: norio-nomura/action-swiftlint@3.2.1
        with:
          args: --strict
  Build:
    needs: SwiftLint
    
    name: Build project
    runs-on: macos-latest
    strategy:
        matrix:
          destination: ['platform=iOS Simulator,OS=15.2,name=iPhone 8']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CocoaPods
        run: |
          sudo gem install cocoapods && pod install
      - name: Build
        run: |
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`;
          fullname="`ls -A | grep -i \\.xcodeproj\$`";
          schemeName=${fullname%.*};
          xcodebuild clean build -destination "${destination}" -"$filetype_parameter" "$file_to_build" -scheme "$schemeName" CODE_SIGNING_REQUIRED=NO CODE_SIGN_ENTITLEMENTS="" CODE_SIGNING_ALLOWED="NO"
        env:
         destination: ${{ matrix.destination }}
         
  Test:
    needs: Build

    name: Test project
    runs-on: macos-latest
    strategy:
        matrix:
          destination: ['platform=iOS Simulator,OS=15.2,name=iPhone 8']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CocoaPods
        run: |
          sudo gem install cocoapods && pod install
      - name: Test
        run: |
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`;
          fullname="`ls -A | grep -i \\.xcodeproj\$`";
          schemeName=${fullname%.*};
          xcodebuild clean test -destination "${destination}" -"$filetype_parameter" "$file_to_build" -scheme "$schemeName" CODE_SIGNING_REQUIRED=NO CODE_SIGN_ENTITLEMENTS="" CODE_SIGNING_ALLOWED="NO"
        env:
         destination: ${{ matrix.destination }}

